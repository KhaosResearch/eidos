{
	"info": {
		"_postman_id": "0b063d9f-c7ea-4f11-bb27-34810b428c33",
		"name": "eidos-api-testing",
		"description": "Testing collection for endpoints of [eidos.](https://github.com/KhaosResearch/eidos)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9451187"
	},
	"item": [
		{
			"name": "functions",
			"item": [
				{
					"name": "List functions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var schema = {",
									"  \"type\": \"array\",",
									"  \"items\": {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"      \"name\": { \"type\": \"string\" },",
									"      \"description\": { \"type\": \"string\" },",
									"      \"parameters\": {",
									"        \"type\": \"object\",",
									"        // We don't check the inner object",
									"        \"required\": [\"properties\", \"required\", \"title\", \"type\"]",
									"      }",
									"    },",
									"    \"required\": [\"name\", \"description\", \"parameters\"]",
									"  }",
									"}",
									";",
									"",
									"pm.test('Schema is valid', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{url}}:{{port}}/api/v1/functions",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"functions"
							]
						}
					},
					"response": []
				},
				{
					"name": "List functions names",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": {",
									"        \"type\": \"string\"",
									"    }",
									"};",
									"",
									"pm.test('Schema is valid', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{url}}:{{port}}/api/v1/functions/names",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"functions",
								"names"
							]
						}
					},
					"response": []
				},
				{
					"name": "Definition of function (salute)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"name\": { \"type\": \"string\" },",
									"    \"description\": { \"type\": \"string\" },",
									"    \"parameters\": {",
									"      \"type\": \"object\",",
									"      // We don't check the exact parameters, as they may change between functions",
									"      \"required\": [\"properties\", \"required\", \"title\", \"type\"]",
									"    }",
									"  },",
									"  \"required\": [\"name\", \"description\", \"parameters\"]",
									"};",
									"",
									"pm.test('Schema is valid', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{url}}:{{port}}/api/v1/functions/salute",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"functions",
								"salute"
							]
						}
					},
					"response": []
				},
				{
					"name": "Response schema of function (salute)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var schema = {",
									"  \"type\": \"object\",",
									"  // Specific schema is function dependent",
									"};",
									"",
									"pm.test('Schema is valid', function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{api_key}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{url}}:{{port}}/api/v1/functions/salute/schema",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"functions",
								"salute",
								"schema"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "execution",
			"item": [
				{
					"name": "Execute function (salute)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status success\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status.code).to.eql(200);",
									"});",
									"",
									"pm.test(\"Answer is valid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.msg).to.eql(\"Hello, world! o7\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{api_key}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"who\": \"world\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{port}}/api/v1/execution/salute",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"execution",
								"salute"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Health",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{url}}:{{port}}/healthz",
					"protocol": "{{protocol}}",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"healthz"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "function",
			"value": ""
		}
	]
}